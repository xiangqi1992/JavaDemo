<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.mybatis.mapper.EmpMapper4Tag">
    <!--List<Emp> getEmpListByMoreTJ(Emp emp);-->
    <select id="getEmpListByMoreTJ" resultType="Emp">
        select * from t_emp where 1=1
        <if test="ename != '' and ename != null">
            and ename = #{ename}
        </if>
        <if test="age != '' and age != null">
            and age = #{age}
        </if>
        <if test="sex != '' and sex != null">
            and sex = #{sex}
        </if>
    </select>

    <!--<where>标签替代where 1=1-->
    <select id="getEmpListByMoreTJ2" resultType="Emp">
        select * from t_emp
        <where>
            <if test="ename != '' and ename != null">
                ename = #{ename}
            </if>
            <if test="age != '' and age != null">
                and age = #{age}
            </if>
            <if test="sex != '' and sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>

    <!--
        trim用于去掉或添加标签中的内容
        常用属性：
            prefix：在trim标签中的内容的前面添加某些内容
            prefixOverrides：在trim标签中的内容的前面去掉某些内容
            suffix：在trim标签中的内容的后面添加某些内容
            suffixOverrides：在trim标签中的内容的后面去掉某些内容
    -->
    <select id="getEmpListByMoreTJ3" resultType="Emp">
        select * from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="ename != '' and ename != null">
                ename = #{ename} and
            </if>
            <if test="age != '' and age != null">
                age = #{age} and
            </if>
            <if test="sex != '' and sex != null">
                sex = #{sex}
            </if>
        </trim>
    </select>

    <!--List<Emp> getEmpListByChoose(Emp emp);-->
    <!--sql片段，可以记录一段公共sql片段，在使用的地方通过include标签进行引入-->
    <sql id="empColumns">
        eid,ename,age,sex,did
    </sql>
    <!--choose、when、otherwise相当于if...else if..else-->
    <select id="getEmpListByChoose" resultType="Emp">
        select <include refid="empColumns"></include> from t_emp
        <where>
            <choose>
                <when test="ename != '' and ename != null">
                    ename = #{ename}
                </when>
                <when test="age != '' and age != null">
                    age = #{age}
                </when>
                <when test="sex != '' and sex != null">
                    sex = #{sex}
                </when>
                <when test="email != '' and email != null">
                    email = #{email}
                </when>
            </choose>
        </where>
    </select>

    <!--
        属性：
            collection：设置要循环的数组或集合
            item：表示集合或数组中的每一个数据
            separator：设置循环体之间的分隔符
            open：设置foreach标签中的内容的开始符
            close：设置foreach标签中的内容的结束符
    -->
    <!--int insertMoreEmp(List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.ename},#{emp.age},#{emp.sex},#{emp.email},null)
        </foreach>
    </insert>

    <!--int deleteMoreByArray(int[] eids);-->
    <delete id="deleteMoreByArray1">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>
    </delete>

    <!--int deleteMoreByArray(int[] eids);-->
    <delete id="deleteMoreByArray2">
        delete from t_emp where eid in
        <foreach collection="eids" item="eid" separator="," open="(" close=")">
            #{eid}
        </foreach>
    </delete>

</mapper>
